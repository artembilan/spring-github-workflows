name: Build with Gradle and Stage Release to Artifactory

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: 'Release version like 3.0.0-M1, 3.1.0-RC1, 3.2.0 etc.'
        required: true
        type: string
      gradleTasks:
        description: 'Additional Gradle tasks. The `build` and `artifactoryPublish` are included.'
        required: false
        type: string

    outputs:
      buildName:
        description: 'Artifactory Build Name'
        value: ${{ jobs.staging-to-artifactory-with-gradle.outputs.buildName }}
      buildNumber:
        description: 'Artifactory Build Number'
        value: ${{ jobs.staging-to-artifactory-with-gradle.outputs.buildNumber }}

    secrets:
      GRADLE_ENTERPRISE_CACHE_USER:
        required: false
      GRADLE_ENTERPRISE_CACHE_PASSWORD:
        required: false
      GRADLE_ENTERPRISE_SECRET_ACCESS_KEY:
        required: false
      GH_ACTIONS_REPO_TOKEN:
        required: true
      JF_ARTIFACTORY_SPRING:
        required: true

env:
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}
  JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}

jobs:
  staging-to-artifactory-with-gradle:
    runs-on: ubuntu-latest
    outputs:
      buildName: ${{ steps.configure-jfrog.outputs.buildName }}
      buildNumber: ${{ steps.configure-jfrog.outputs.buildNumber }}

    steps:

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}
          show-progress: false

      - name: Set up Gradle
        uses: spring-io/spring-gradle-build-action@v2

      - name: Checkout Common Repo
        uses: actions/checkout@v4
        with:
          repository: artembilan/spring-github-workflows
          path: build
          show-progress: false

      - uses: jfrog/setup-jfrog-cli@v3

      - name: Configure JFrog Cli
        id: configure-jfrog
        run: |
          jf gradlec --repo-deploy libs-staging-local
          
          buildName=${{ github.event.repository.name }}-${{ inputs.releaseVersion }}
          
          echo JFROG_CLI_BUILD_NAME=$buildName >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
          echo buildName=$buildName >> $GITHUB_OUTPUT
          echo buildNumber=$GITHUB_RUN_NUMBER >> $GITHUB_OUTPUT
          echo "::notice title=Artifactory Build Name & Number::$buildName/$buildNumber"

      - name: Set Release Version
        run: sed -i "s/version=.*/version=${{ inputs.releaseVersion }}/" gradle.properties

      - name: Build and Publish
        run: |
          jf gradle clean build ${{ inputs.gradleTasks }} artifactoryPublish --init-script build/utils/spring-project-init.gradle
          jf rt build-publish

      - name: Tag Release and Next Development Version
        run: |
          git config --global user.name 'Spring Builds'
          git config --global user.email 'builds@springframework.org'
          git commit -a -m "[artifactory-release] Release version ${{ inputs.releaseVersion }}"
          git tag "v${{ inputs.releaseVersion }}"
          git push --tags origin
          jf gradle nextDevelopmentVersion 
          git commit -a -m "[artifactory-release] Next development version"
          git push origin
