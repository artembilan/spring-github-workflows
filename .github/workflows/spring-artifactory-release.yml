name: Perform Release with Artifactory

on:
  workflow_call:
    inputs:
      buildToolArgs:
        description: 'Additional Maven or Gradle command arguments: tasks, goals, plugins etc. The `install` for Maven is included. The `build` and `artifactoryPublish` for Gradle are included.'
        required: false
        type: string
      verifyStagedWorkflow:
        description: 'A workflow name in the target project to dispatch against staged artifacts. The `releaseVersion` must be a workflow input.'
        required: false
        type: string
        default: verify-staged-artifacts.yml

    secrets:
      GRADLE_ENTERPRISE_CACHE_USER:
        required: false
      GRADLE_ENTERPRISE_CACHE_PASSWORD:
        required: false
      GRADLE_ENTERPRISE_SECRET_ACCESS_KEY:
        required: false
      GH_ACTIONS_REPO_TOKEN:
        required: true
      OSSRH_URL:
        required: true
      OSSRH_S01_TOKEN_USERNAME:
        required: true
      OSSRH_S01_TOKEN_PASSWORD:
        required: true
      OSSRH_STAGING_PROFILE_NAME:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true
      JF_ARTIFACTORY_SPRING:
        required: true
      SPRING_RELEASE_SLACK_WEBHOOK_URL:
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}

jobs:
  releaseVersion:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.release-version.outputs.releaseVersion }}

    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Find Current Version to Release
        id: release-version
        run: |
          if test -f pom.xml
          then
            CURRENT_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          else
            CURRENT_VERSION=$(gradle properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
          fi
          export CANDIDATE_VERSION=${CURRENT_VERSION/-SNAPSHOT}
          RELEASE_VERSION=$(gh api repos/$GITHUB_REPOSITORY/milestones --jq 'map(select(.title | startswith(env.CANDIDATE_VERSION))) | .[0] | .title')
          if [ -z $RELEASE_VERSION ]
          then
            gh run cancel ${{ github.run_id }}
            echo "::warning title=Nothing to release::No scheduled milestone for $CURRENT_VERSION version"
          else
            echo releaseVersion=$RELEASE_VERSION >> $GITHUB_OUTPUT
            echo "::notice title=RELEASE VERSION::$RELEASE_VERSION"
          fi

  staging:
    needs: releaseVersion
    name: Stage ${{ needs.releaseVersion.outputs.releaseVersion }}
    uses: ./.github/workflows/spring-stage-release.yml
    with:
      releaseVersion: ${{ needs.releaseVersion.outputs.releaseVersion }}
      buildToolArgs: ${{ inputs.buildToolArgs }}
    secrets: inherit

  verify-staged:
    needs: [releaseVersion, staging]
    name: Verify ${{ needs.releaseVersion.outputs.releaseVersion }}
    runs-on: ubuntu-latest
    steps:

      - name: Call smoke tests workflow
        uses: aurelien-baudet/workflow-dispatch@main
        with:
          workflow: ${{ inputs.verifyStagedWorkflow }}
          wait-for-completion-interval: 30s
          display-workflow-run-url-interval: 5s
          workflow-logs: print
          token: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}
          inputs: '{ "releaseVersion": "${{ needs.releaseVersion.outputs.releaseVersion }}" }'

  promote-milestone:
    needs: [releaseVersion, staging, verify-staged]
    name: Promote ${{ needs.releaseVersion.outputs.releaseVersion }}
    if: ${{ (contains(needs.releaseVersion.outputs.releaseVersion, '-M') || contains(needs.releaseVersion.outputs.releaseVersion, '-RC')) }}
    uses: ./.github/workflows/spring-artifactory-promote-milestone.yml
    with:
      buildName: ${{ needs.staging.outputs.buildName }}
      buildNumber: ${{ needs.staging.outputs.buildNumber }}
    secrets: inherit

  promote-ga:
    needs: [releaseVersion, staging, verify-staged]
    name: Promote ${{ needs.releaseVersion.outputs.releaseVersion }}
    if: ${{ !contains(needs.releaseVersion.outputs.releaseVersion, '-') }}
    uses: ./.github/workflows/spring-artifactory-promote-central.yml
    with:
      buildName: ${{ needs.staging.outputs.buildName }}
      buildNumber: ${{ needs.staging.outputs.buildNumber }}
    secrets: inherit

  finalize:
    if: ${{ !(failure() || cancelled()) }}
    needs: [releaseVersion, promote-milestone, promote-ga]
    name: Finalize ${{ needs.releaseVersion.outputs.releaseVersion }}
    uses: ./.github/workflows/spring-finalize-release.yml
    with:
      milestone: ${{ needs.releaseVersion.outputs.releaseVersion }}
    secrets: inherit
