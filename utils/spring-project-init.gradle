gradle.projectsLoaded {
    rootProject {
        allprojects {
            afterEvaluate {
                tasks.artifactoryPublish.enabled(false)
                pluginManager.withPlugin('maven-publish') {
                    artifactory {
                        publish {
                            defaults {
                                def zipArtifactProps =
                                        ['zip.name'       : project.name,
                                         'zip.displayname': project.description,
                                         'zip.deployed'   : 'false']
                                properties {
                                    mavenJava zipArtifactProps, '*:*:*:*@zip'
                                    mavenJava 'zip.type': 'docs', '*:*:*:docs@zip'
                                    mavenJava 'zip.type': 'dist', '*:*:*:dist@zip'
                                }
                            }
                            forkCount = 10
                        }
                        clientConfig.setConnectionRetries(4)
                    }

                    tasks.artifactoryPublish{
                        publications(publishing.publications.mavenJava)
                    }
                }
            }
        }

        // No need to have this task in project: only when we perform GHA
        tasks.register('nextDevelopmentVersion') {
            doLast {
                if (!project.version.endsWith('-SNAPSHOT')) {
                    String nextDevelopmentVersion
                    if (project.version.contains('-M') || project.version.contains('-RC')) {
                        nextDevelopmentVersion = project.version - ~/(M|RC)\d+/ + 'SNAPSHOT'
                    } else {
                        def versionParts = project.version.tokenize('.')
                        def major = versionParts[0]
                        def minor = versionParts[1]
                        def patch = versionParts[2] as int
                        nextDevelopmentVersion = major + '.' + minor + '.' + (++patch) + '-SNAPSHOT'
                    }

                    def gradleProperties = file('gradle.properties')
                    def newProps = gradleProperties.text.replace(project.version, nextDevelopmentVersion)
                    gradleProperties.text = newProps
                }
            }
        }
    }
}